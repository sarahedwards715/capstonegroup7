{"version":3,"sources":["logo.svg","services/authSpot.js","services/backendRequests.js","services/spotAPIRequests.js","store/store.js","customHooks/useForm.js","validationInfo/registrationValidation.js","components/userRegistration/UserRegistration.js","validationInfo/loginValidation.js","components/userLogin/UserLogin.js","components/spotifyLogin/SpotifyLogin.js","views/Landing.js","components/moodCard/MoodCard.js","components/moodsList/MoodsList.js","components/deletionModal/DeletionModal.js","components/playlistsCard/PlaylistsCard.js","components/playlistsList/PlaylistsList.js","views/Browse.js","components/songListItem/SongListItem.js","customHooks/useInfiniteScroll.js","components/songList/SongList.js","components/reviewsItems/ReviewsItems.js","components/reviewsDisplay/ReviewsDisplay.js","components/reviews/Reviews.js","views/Playlist.js","views/NotFound.js","views/Mood.js","components/userPlaylists/UserPlaylists.js","validationInfo/patchUserValidation.js","components/userProfile/UserProfile.js","views/Profile.js","views/Home.js","components/navigation/Navigation.js","assets/images/albumPlaceholder.jpg","components/albumCard/AlbumCard.js","components/albumsList/AlbumsList.js","views/Album.js","assets/images/artistPlaceholder.png","components/artistsCard/ArtistsCard.js","components/artistsList/ArtistsList.js","views/Artist.js","views/Search.js","components/searchBar/SearchBar.js","validationInfo/playlistValidation.js","components/playlistsCreation/PlaylistsCreation.js","components/accessCountdown/AccessCountdown.js","App.js","reportWebVitals.js","index.js"],"names":["redirect_uri","client_ID","window","location","host","baseURL","getUserByUsername","username","name","console","log","fetch","method","headers","Accept","then","res","json","getPlaylistByUsername","moodifyToken","Authorization","getRecommendations","accessToken","mood","limit","recURL","encodeURIComponent","getArtistAlbums","artist_id","offset","reqURL","searchQuery","query","type","qryURL","authURL","create","devtools","set","get","user","setUser","token","userPlaylists","setUserPlaylists","data","moodifyUserInfo","displayName","createdAt","_id","setMoodifyUserInfo","setAccessToken","accessExpiresIn","setExpiresIn","time","Number","moodsArray","setMoodsArray","genres","playlists","setPlaylists","logout","createdPlaylistData","title","description","songs","clearCreatedPlaylistData","setCreatedPlaylistData","formData","currentData","addCreatedPlaylistSongs","newSongObj","currentSongs","deleteCreatedPlaylistSongs","songId","indexForDeletion","findIndex","song","id","newArray","splice","createdPlaylistEditMode","active","playlist_id","setCreatedPlaylistEditMode","setCreatedPlaylistEditData","playlist","selectedTrackToPlay","setSelectedTrackToPlay","trackUri","premiumLoginCode","setPremiumLoginCode","code","useForm","handleSubmit","validate","values","confirmPassword","useState","errors","setErrors","isSubmitting","setIsSubmitting","handleValidate","e","preventDefault","useEffect","Object","keys","length","registrationValidation","trim","includes","match","password","UserRegistration","props","formSuccess","setFormSuccess","setFormData","handleChange","event","state","target","value","setRegisterInProgress","body","JSON","stringify","postUsers","statusCode","databaseErrorCode","newErrors","message","className","ButtonGroup","Button","onClick","toggleFunction","Form","onSubmit","Group","Label","Control","placeholder","isInvalid","onChange","Feedback","loginValidation","UserLogin","useStore","history","useHistory","push","setLoginInProgress","loginUser","userInfo","Landing","registerUserVisible","setRegisterUserVisible","loginInProgress","registerInProgress","handleClick","hash","substring","split","reduce","initial","item","parts","decodeURIComponent","authToken","access_token","expires_in","Loader","size","href","MoodCard","Card","Body","to","MoodsList","textAlign","map","index","DeletionModal","Modal","centered","onExited","setVisible","onShow","show","visible","deleteTarget","Footer","compact","negative","deleteFunction","PlaylistsCard","modalVisible","setModalVisible","totalLikes","reviews","total","currentValue","thumbsUp","Title","style","color","Text","showDescription","variant","PlaylistsList","Browse","SongListItem","album","artists","duration_ms","popularity","songDuration","minutes","Math","floor","seconds","toFixed","millisToMinutesAndSeconds","Table","Row","Cell","width","some","padding","margin","preview_url","albumName","useInfiniteScroll","callback","atBottom","setAtBottom","setTimeout","SongList","infiniteScrollCallback","onScroll","scrollable","scrollHeight","scrollTop","clientHeight","handleScroll","stackable","collapsing","Header","HeaderCell","ReviewsItems","review","Icon","ReviewsDisplay","Reviews","like","setLike","setDescription","setReviews","postReview","Field","control","TextArea","label","as","labelPosition","Playlist","activePlaylist","setActivePlaylist","getPlaylist","params","display","justifyContent","alignItems","marginTop","NotFound","Mood","setSongs","error","status","tracks","newSongs","filter","track","oldTrack","moreSongs","UserPlaylists","patchUserValidation","UserProfile","setDisplayName","editDisplayNameInputVisibility","setEditDisplayNameInputVisibility","toggleEditDisplayName","a","moodifyUser","selectedUserPlaylist","patchUser","updatedDisplayName","newMoodifyUserInfo","InputGroup","Prepend","FormControl","aria-label","aria-describedby","Append","Profile","Home","Navigation","activeItem","setActiveItem","Menu","pointing","secondary","Item","AlbumCard","Img","src","images","url","AlbumsList","scrollWidth","scrollLeft","clientWidth","albums","Album","artist","image","albumInfo","setAlbumInfo","albumTracks","setAlbumTracks","artistAlbums","setArtistAlbums","artistTotalAlbums","setArtistTotalAlbums","artistAlbumsOffset","setArtistAlbumsOffset","album_id","scrollTo","getAlbum","getAlbumTracks","items","alt","Placeholder","Image","newAlbums","oldAlbum","moreAlbums","ArtistsCard","ArtistsList","Artist","followers","artistInfo","setArtistInfo","artistTracks","setArtistTracks","artistRelatedArtists","setArtistRelatedArtists","getArtist","getArtistTracks","getRelatedArtists","backgroundImage","backgroundSize","Search","searchedTracks","setSearchedTracks","searchedArtists","setSearchedArtists","searchedAlbums","setSearchedAlbums","SearchBar","setQuery","hasValidation","playlistValidation","PlaylistsCreation","playlistCreationHeader","updateData","patchPlaylists","setInterval","postPlaylists","Or","Message","warning","AccessCountdown","countdown","setcountdown","timerRunning","setTimerRunning","timer","clearInterval","App","controls","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.f83eabc6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","// CITATION: Most of this authorization code is taken from the Spotify Official Thirtify Example - https://github.com/possan/webapi-player-example\r\n// Credits to Per-Olov Jernberg, Jose M. Perez, Michael Thelin, and asmitter\r\nlet redirect_uri = \"\";\r\nlet client_ID = \"\";\r\n\r\nif (window.location.host === \"localhost:3000\") {\r\n  client_ID = \"30bda40009804cc0b810a094d8653182\";\r\n  redirect_uri = \"http://localhost:3000/capstonegroup7/\";\r\n} else {\r\n  client_ID = \"7a4ffd2d4afc4f4d876826b6d369ab66\";\r\n  redirect_uri = \"https://sarahedwards715.github.io/capstonegroup7/\";\r\n}\r\n\r\nexport function buildLoginURL() {\r\n  let scopes =\r\n    \"streaming%20user-read-email%20user-read-private%20user-library-read%20user-library-modify%20user-read-playback-state%20user-modify-playback-state\";\r\n  return (\r\n    \"https://accounts.spotify.com/authorize?client_id=\" +\r\n    client_ID +\r\n    \"&redirect_uri=\" +\r\n    encodeURIComponent(redirect_uri) +\r\n    \"&response_type=token\" +\r\n    \"&state=standUpLazerous\"\r\n  );\r\n}\r\n\r\n// This Function is for launching the auth in a separate window. Couldn't quite get it to work.\r\n// I may try and return to this much later in the project\r\n// export function launchLoginSpot() {\r\n//   let url = buildLoginURL();\r\n\r\n//   let dimensions = {\r\n//     height: 800,\r\n//     width: 400,\r\n//     left: window.screen.width / 2 - 400,\r\n//     top: window.screen.height / 2 - 200,\r\n//   };\r\n\r\n//   let authPopup = window.open(\r\n//     url,\r\n//     \"Spotify Authentication\",\r\n//     `menubar=no,location=no,resizable=no,scrollbars=no,width=${dimensions.width},height=${dimensions.height},top=${dimensions.top},left=${dimensions.left}`\r\n//   );\r\n// }\r\n\r\nexport function setAccessToken(token, expires_in) {\r\n  localStorage.setItem(\"access_token\", token);\r\n  localStorage.setItem(\"expires_in\", expires_in);\r\n}\r\n","//Since our backend is still only local, baseURL is port 4000 for now.\r\n//Just change baseURL whenever we deploy our backend somewhere\r\n// let baseURL = \"http://localhost:4000/\";\r\nlet baseURL = \"https://flicker-tropical-umbra.glitch.me/\";\r\n\r\nexport const postUsers = (formData) => {\r\n  //Maybe Password Later??\r\n  return fetch(baseURL + \"users\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      username: formData.username,\r\n      displayName: formData.displayName,\r\n      password: formData.password,\r\n    }),\r\n  }).then((res) => res.json());\r\n};\r\n\r\nexport const loginUser = (formData) => {\r\n  return fetch(baseURL + \"users/login\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      username: formData.username,\r\n      password: formData.password,\r\n    }),\r\n  }).then((res) => res.json());\r\n};\r\n\r\nexport const premiumLogin = (code) => {\r\n  return fetch(baseURL + \"login\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      code,\r\n    }),\r\n  }).then((res) => {\r\n    console.log(res.data, \"from premium login\");\r\n  });\r\n};\r\n\r\nexport const getUsers = () => {\r\n  return fetch(baseURL + \"users\", {\r\n    method: \"GET\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  })\r\n    .then((res) => res.json())\r\n    .then((data) => console.log(data));\r\n};\r\n\r\nexport const patchUser = (id, displayName, moodifyToken) => {\r\n  return fetch(baseURL + \"users/\" + id, {\r\n    method: \"PATCH\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"Bearer \" + moodifyToken,\r\n    },\r\n    body: JSON.stringify({\r\n      displayName,\r\n    }),\r\n  }).then((res) => res.json());\r\n};\r\n\r\nexport const deleteUser = (id, moodifyToken) => {\r\n  return fetch(baseURL + \"users/\" + id, {\r\n    method: \"DELETE\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"Bearer \" + moodifyToken,\r\n    },\r\n  }).then((res) => res.json());\r\n};\r\n\r\nexport const getUsersById = (id) => {\r\n  console.log(id);\r\n  return fetch(baseURL + \"users/\" + id, {\r\n    method: \"GET\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  })\r\n    .then((res) => res.json())\r\n    .then((data) => console.log(data));\r\n};\r\n\r\nexport const getUserByUsername = (username) => {\r\n  let name = username;\r\n\r\n  console.log(name, \"from backend\");\r\n  return fetch(baseURL + \"userProfile/\" + username, {\r\n    method: \"GET\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  }).then((res) => res.json());\r\n};\r\n\r\nexport const getPlaylists = () => {\r\n  return fetch(baseURL + \"playlists\", {\r\n    method: \"GET\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  }).then((res) => res.json());\r\n};\r\n\r\nexport const getPlaylistById = (id) => {\r\n  return fetch(baseURL + \"playlists/\" + id, {\r\n    method: \"GET\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  }).then((res) => res.json());\r\n};\r\n\r\nexport const getPlaylistByUsername = (username, moodifyToken) => {\r\n  return fetch(baseURL + \"userPlaylists/\" + username, {\r\n    method: \"GET\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"Bearer \" + moodifyToken,\r\n    },\r\n  }).then((res) => res.json());\r\n};\r\n\r\nexport const postPlaylists = (createdPlaylistData, username, moodifyToken) => {\r\n  return fetch(baseURL + \"playlists\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"Bearer \" + moodifyToken,\r\n    },\r\n    body: JSON.stringify({\r\n      ...createdPlaylistData,\r\n      username: username,\r\n    }),\r\n  }).then((res) => res.json());\r\n};\r\n\r\nexport const getReview = (id) => {\r\n  return fetch(baseURL + `reviews/${id}`).then((res) => res.json());\r\n};\r\n\r\nexport const postReview = (\r\n  playlist_id,\r\n  description,\r\n  thumbsUp,\r\n  moodifyToken,\r\n  username\r\n) => {\r\n  console.log(playlist_id);\r\n  return fetch(baseURL + \"reviews\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"Bearer \" + moodifyToken,\r\n    },\r\n    body: JSON.stringify({\r\n      playlist_id: playlist_id,\r\n      username: username,\r\n      description: description,\r\n      thumbsUp: thumbsUp,\r\n    }),\r\n  })\r\n    .then((res) => res.json())\r\n};\r\n\r\nexport const patchPlaylists = (\r\n  playlist_id,\r\n  createdPlaylistData,\r\n  username,\r\n  moodifyToken\r\n) => {\r\n  let updateData = {};\r\n  if (createdPlaylistData.title) updateData.title = createdPlaylistData.title;\r\n  if (createdPlaylistData.description)\r\n    updateData.description = createdPlaylistData.description;\r\n  if (createdPlaylistData.songs) updateData.songs = createdPlaylistData.songs;\r\n  console.log(updateData);\r\n\r\n  return fetch(baseURL + \"playlists/\" + playlist_id, {\r\n    method: \"PATCH\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"Bearer \" + moodifyToken,\r\n    },\r\n    body: JSON.stringify({\r\n      ...updateData,\r\n      username: username,\r\n    }),\r\n  }).then((res) => res.json());\r\n};\r\n\r\nexport const deletePlaylists = (playlist_id, moodifyToken) => {\r\n  return fetch(baseURL + \"playlists/\" + playlist_id, {\r\n    method: \"DELETE\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"Bearer \" + moodifyToken,\r\n    },\r\n  }).then((res) => res.json());\r\n};\r\n","//Let's Define Base Spotify API URL\r\nconst baseURL = \"https://api.spotify.com/v1/\";\r\n\r\nexport const getMoods = (accessToken) => {\r\n  return fetch(baseURL + \"recommendations/available-genre-seeds\", {\r\n    method: \"GET\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"Bearer \" + accessToken,\r\n    },\r\n  }).then((res) => res.json());\r\n};\r\n\r\nexport const getRecommendations = (accessToken, mood, limit = 15) => {\r\n  let recURL =\r\n    baseURL +\r\n    \"recommendations?limit=\" +\r\n    encodeURIComponent(limit) +\r\n    \"&seed_artists=\" +\r\n    encodeURIComponent(\",\") +\r\n    \"&seed_genres=\" +\r\n    encodeURIComponent(mood) +\r\n    \"&seed_tracks=\" +\r\n    encodeURIComponent(\",\");\r\n\r\n  return fetch(recURL, {\r\n    method: \"GET\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"Bearer \" + accessToken,\r\n    },\r\n  }).then((res) => res.json());\r\n};\r\n\r\nexport const getArtist = (accessToken, artist_id) => {\r\n  let reqURL = baseURL + \"artists/\" + artist_id;\r\n\r\n  return fetch(reqURL, {\r\n    method: \"GET\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"Bearer \" + accessToken,\r\n    },\r\n  }).then((res) => res.json());\r\n};\r\n\r\nexport const getArtistAlbums = (\r\n  accessToken,\r\n  artist_id,\r\n  limit = 10,\r\n  offset = 0\r\n) => {\r\n  let reqURL =\r\n    baseURL +\r\n    \"artists/\" +\r\n    artist_id +\r\n    \"/albums?market=US&limit=\" +\r\n    encodeURIComponent(limit) +\r\n    \"&offset=\" +\r\n    encodeURIComponent(offset);\r\n\r\n  return fetch(reqURL, {\r\n    method: \"GET\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"Bearer \" + accessToken,\r\n    },\r\n  }).then((res) => res.json());\r\n};\r\n\r\nexport const getArtistTracks = (accessToken, artist_id) => {\r\n  let reqURL = baseURL + \"artists/\" + artist_id + \"/toptracks?market=US\";\r\n\r\n  return fetch(reqURL, {\r\n    method: \"GET\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"Bearer \" + accessToken,\r\n    },\r\n  }).then((res) => res.json());\r\n};\r\n\r\nexport const getRelatedArtists = (accessToken, artist_id) => {\r\n  let reqURL = baseURL + \"artists/\" + artist_id + \"/related-artists\";\r\n\r\n  return fetch(reqURL, {\r\n    method: \"GET\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"Bearer \" + accessToken,\r\n    },\r\n  }).then((res) => res.json());\r\n};\r\n\r\nexport const getAlbum = (accessToken, album_id) => {\r\n  let reqURL = baseURL + \"albums/\" + album_id;\r\n\r\n  return fetch(reqURL, {\r\n    method: \"GET\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"Bearer \" + accessToken,\r\n    },\r\n  }).then((res) => res.json());\r\n};\r\n\r\nexport const getAlbumTracks = (accessToken, album_id) => {\r\n  let reqURL = baseURL + \"albums/\" + album_id + \"/tracks?limit=50\";\r\n\r\n  return fetch(reqURL, {\r\n    method: \"GET\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"Bearer \" + accessToken,\r\n    },\r\n  }).then((res) => res.json());\r\n};\r\n\r\nexport const searchQuery = (\r\n  accessToken,\r\n  query,\r\n  type,\r\n  limit = 10,\r\n  offset = 0\r\n) => {\r\n  let qryURL =\r\n    baseURL +\r\n    \"search?query=\" +\r\n    encodeURIComponent(query) +\r\n    \"&type=\" +\r\n    encodeURIComponent(type) +\r\n    \"&offset=\" +\r\n    encodeURIComponent(offset) +\r\n    \"&limit=\" +\r\n    encodeURIComponent(limit);\r\n\r\n  return fetch(qryURL, {\r\n    method: \"GET\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"Bearer \" + accessToken,\r\n    },\r\n  }).then((res) => res.json());\r\n};\r\n","import create from \"zustand\";\r\nimport { devtools } from \"zustand/middleware\";\r\nimport { buildLoginURL } from \"../services/authSpot\";\r\nimport {\r\n  getPlaylists,\r\n  getPlaylistByUsername,\r\n} from \"../services/backendRequests\";\r\nimport { getMoods } from \"../services/spotAPIRequests\";\r\n\r\nconst authURL = buildLoginURL();\r\n\r\nconst useStore = (set, get) => ({\r\n  user: { username: \"\", moodifyToken: \"\" },\r\n  setUser: (username, token) => {\r\n    set({ user: { username: username, moodifyToken: token } });\r\n  },\r\n  userPlaylists: [],\r\n  setUserPlaylists: () => {\r\n    if (get().accessToken) {\r\n      getPlaylistByUsername(get().user.username).then(data =>\r\n        set({ userPlaylists: data })\r\n      );\r\n    }\r\n  },\r\n  moodifyUserInfo: { displayName: \"\", createdAt: \"\", _id: \"\" },\r\n  setMoodifyUserInfo: (displayName, createdAt, _id) => {\r\n    set({\r\n      moodifyUserInfo: {\r\n        displayName: displayName,\r\n        createdAt: createdAt,\r\n        _id: _id,\r\n      },\r\n    });\r\n  },\r\n  accessToken: \"\",\r\n  setAccessToken: token => {\r\n    set({ accessToken: token });\r\n  },\r\n  accessExpiresIn: null,\r\n  setExpiresIn: time => {\r\n    set({ accessExpiresIn: Number(time) });\r\n  },\r\n  authURL: authURL,\r\n  moodsArray: [],\r\n  setMoodsArray: () => {\r\n    if (get().accessToken) {\r\n      getMoods(get().accessToken).then(data => {\r\n        set({ moodsArray: data.genres });\r\n      });\r\n    }\r\n  },\r\n  playlists: [],\r\n  setPlaylists: () => {\r\n    if (get().accessToken) {\r\n      getPlaylists().then(data => {\r\n        console.log(\"Playlists\", data);\r\n        set({ playlists: data });\r\n      });\r\n    }\r\n  },\r\n  logout: () => {\r\n    set({\r\n      user: { username: \"\", moodifyToken: \"\" },\r\n      accessToken: \"\",\r\n      accessExpiresIn: \"\",\r\n      createdPlaylistData: {\r\n        title: \"\",\r\n        description: \"\",\r\n        songs: [],\r\n      },\r\n    });\r\n  },\r\n  createdPlaylistData: {\r\n    title: \"\",\r\n    description: \"\",\r\n    songs: [],\r\n  },\r\n  clearCreatedPlaylistData: () => {\r\n    set({\r\n      createdPlaylistData: {\r\n        title: \"\",\r\n        description: \"\",\r\n        songs: [],\r\n      },\r\n    });\r\n  },\r\n  setCreatedPlaylistData: formData => {\r\n    let currentData = get().createdPlaylistData;\r\n    set({\r\n      createdPlaylistData: {\r\n        ...currentData,\r\n        title: formData.title,\r\n        description: formData.description,\r\n      },\r\n    });\r\n  },\r\n  addCreatedPlaylistSongs: newSongObj => {\r\n    let currentData = get().createdPlaylistData;\r\n    let currentSongs = get().createdPlaylistData.songs;\r\n    set({\r\n      createdPlaylistData: {\r\n        ...currentData,\r\n        songs: [...currentSongs, newSongObj],\r\n      },\r\n    });\r\n  },\r\n  deleteCreatedPlaylistSongs: songId => {\r\n    let currentData = get().createdPlaylistData;\r\n    let indexForDeletion = get().createdPlaylistData.songs.findIndex(\r\n      song => song.id === songId\r\n    );\r\n    let newArray = [...get().createdPlaylistData.songs];\r\n    newArray.splice(indexForDeletion, 1);\r\n    set({\r\n      createdPlaylistData: { ...currentData, songs: newArray },\r\n    });\r\n  },\r\n  createdPlaylistEditMode: { active: false, playlist_id: null },\r\n  setCreatedPlaylistEditMode: playlist_id => {\r\n    get().createdPlaylistEditMode?.active\r\n      ? set({ createdPlaylistEditMode: { active: false, playlist_id: null } })\r\n      : set({\r\n          createdPlaylistEditMode: { active: true, playlist_id: playlist_id },\r\n        });\r\n  },\r\n  setCreatedPlaylistEditData: playlist => {\r\n    set({\r\n      createdPlaylistData: {\r\n        title: playlist.title,\r\n        description: playlist.description,\r\n        songs: playlist.songs,\r\n      },\r\n    });\r\n  },\r\n  selectedTrackToPlay: \"\",\r\n  setSelectedTrackToPlay: trackUri => {\r\n    set({ selectedTrackToPlay: trackUri });\r\n  },\r\n  premiumLoginCode: \"\",\r\n  setPremiumLoginCode: code => {\r\n    set({ premiumLoginCode: code });\r\n  },\r\n});\r\n\r\n//Define zustand's useStore hook\r\nexport default create(devtools(useStore));","// I wrote this hook for the Kwitter Project. It should be reusable.\r\n// Credits to Brian Design for his video tutorial - https://www.youtube.com/watch?v=KGFG-yQD7Dw\r\n\r\nimport { useState, useEffect } from \"react\";\r\n\r\nconst useForm = (handleSubmit, validate, values, confirmPassword = \"\") => {\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  const handleValidate = (e) => {\r\n    e.preventDefault()\r\n    setIsSubmitting(true);\r\n    setErrors(validate(values, confirmPassword));\r\n    console.log(\"errors from handle validate\", errors);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      handleSubmit();\r\n    }\r\n  }, [errors]);\r\n\r\n  return { handleValidate, errors, setErrors };\r\n};\r\n\r\nexport default useForm;\r\n","function registrationValidation(values, confirmPassword) {\r\n  let errors = {};\r\n\r\n  if (!values.username.trim()) {\r\n    errors.username = \"Username Is Required!\";\r\n  } else if (values.username.length < 3) {\r\n    errors.username = \"Username Must Have At Least 3 Characters!\";\r\n  }\r\n\r\n  if (values.username.includes(\" \")) {\r\n    errors.username = \"Username Must Not Contain Whitespace!\";\r\n  }\r\n\r\n  if (values.username.match(/^\\W+$/)) {\r\n    errors.username = \"Usernames Must Not Contain Non-Alphanumeric Characters!\";\r\n  }\r\n\r\n  if (values.username.length > 30) {\r\n    errors.username = \"Username May Have No More Than 30 Characters!\";\r\n  }\r\n\r\n  if (!values.displayName.trim()) {\r\n    errors.displayName = \"Display Name Is Required!\";\r\n  } else if (values.displayName.length < 3) {\r\n    errors.displayName = \"Display Name Must Have At Least 3 Characters!\";\r\n  }\r\n\r\n  if (values.displayName.length > 30) {\r\n    errors.displayName = \"Display Name May Have No More Than 30 Characters!\";\r\n  }\r\n\r\n  if (!values.password.trim()) {\r\n    errors.password = \"Password Is Required!\";\r\n  } else if (values.password.length < 3) {\r\n    errors.password = \"Password Must Have At Least 3 Characters!\";\r\n  }\r\n\r\n  if (values.password.length > 30) {\r\n    errors.password = \"Password May Have No More Than 30 Characters!\";\r\n  }\r\n\r\n// TODO Maybe add Confirm Password to Registration?\r\n//   if (!confirmPassword.trim()) {\r\n//     errors.password = \"Password Is Required!\";\r\n//   } else if (confirmPassword !== values.password) {\r\n//     errors.password = \"Passwords Do Not Match!\";\r\n//   }\r\n\r\n  return errors;\r\n}\r\n\r\nexport default registrationValidation;\r\n","import \"./UserRegistration.scss\";\r\nimport React, { useState } from \"react\";\r\n// import { Button, Form, Message } from \"semantic-ui-react\";\r\nimport { Button, ButtonGroup, Form } from \"react-bootstrap\";\r\nimport { postUsers } from \"../../services/backendRequests\";\r\nimport useForm from \"../../customHooks/useForm\";\r\nimport registrationValidation from \"../../validationInfo/registrationValidation\";\r\n\r\nfunction UserRegistration(props) {\r\n  // TODO Confirm Password const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [formSuccess, setFormSuccess] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    username: \"\",\r\n    displayName: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  function handleChange(event) {\r\n    setFormData((state) => ({\r\n      ...state,\r\n      [event.target.name]: event.target.value,\r\n    }));\r\n  }\r\n\r\n  function handleRegister(event) {\r\n    // event.preventDefault();\r\n    props.setRegisterInProgress(true);\r\n\r\n    postUsers(formData).then((data) => {\r\n      if (data.statusCode === 201) {\r\n        props.setRegisterInProgress(false);\r\n        setFormSuccess(true);\r\n      }\r\n\r\n      if (data.statusCode === 400 && data.databaseErrorCode === 11000) {\r\n        let newErrors = { ...errors, username: data.message };\r\n        props.setRegisterInProgress(false);\r\n\r\n        setErrors(newErrors);\r\n      }\r\n    });\r\n  }\r\n\r\n  function handleReset(event) {\r\n    setFormSuccess(false);\r\n    setFormData({\r\n      username: \"\",\r\n      displayName: \"\",\r\n      password: \"\",\r\n    });\r\n  }\r\n\r\n  const { handleValidate, errors, setErrors } = useForm(\r\n    handleRegister,\r\n    registrationValidation,\r\n    formData\r\n  );\r\n\r\n  return (\r\n    <div className=\"userRegistrationWrapper\">\r\n      {formSuccess ? (\r\n        <>\r\n          <div className=\"userRegistrationSuccessBanner\">\r\n            <p className=\"userRegistrationSuccessText\">\r\n              You've Successfully Registered!\r\n            </p>\r\n              <p className=\"userRegistrationSuccessText\">Try Logging In!</p>\r\n            <ButtonGroup >\r\n              <Button\r\n                className=\"userRegistrationResetButton\"\r\n                onClick={(e) => handleReset(e)}\r\n              >\r\n                Reset Form\r\n              </Button>\r\n              <Button\r\n                className=\"landingToggleButton\"\r\n                type=\"reset\"\r\n                onClick={(e) => props.toggleFunction(e)}\r\n              >\r\n               Head To Login\r\n              </Button>\r\n            </ButtonGroup>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <div className=\"formContainer\">\r\n          <Form onSubmit={(e) => handleValidate(e)}>\r\n            <Form.Group>\r\n              <Form.Label className=\"formLabel\">Username</Form.Label>\r\n              <Form.Control\r\n                name=\"username\"\r\n                placeholder=\"Username\"\r\n                isInvalid={errors.username}\r\n                onChange={(e) => handleChange(e)}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {errors.username}\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label className=\"formLabel\">Display Name</Form.Label>\r\n              <Form.Control\r\n                name=\"displayName\"\r\n                placeholder=\"Display Name\"\r\n                isInvalid={errors.displayName}\r\n                onChange={(e) => handleChange(e)}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {errors.displayName}\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label className=\"formLabel\">Password</Form.Label>\r\n              <Form.Control\r\n                name=\"password\"\r\n                placeholder=\"Password\"\r\n                type=\"password\"\r\n                isInvalid={errors.password}\r\n                onChange={(e) => handleChange(e)}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {errors.password}\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n            <ButtonGroup className = \"buttonGroupWrapper\">\r\n              <Button type=\"submit\">Register</Button>\r\n              <Button\r\n                className=\"landingToggleButton\"\r\n                type=\"reset\"\r\n                onClick={(e) => props.toggleFunction(e)}\r\n              >\r\n                Back to Login\r\n              </Button>\r\n            </ButtonGroup>\r\n          </Form>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserRegistration;\r\n","function loginValidation(values) {\r\n  let errors = {};\r\n\r\n  if (!values.username) {\r\n    errors.username = \"Please Enter Your Username!\";\r\n  }\r\n\r\n  if (!values.password) {\r\n    errors.password = \"Please Enter Your Password!\";\r\n  }\r\n\r\n  return errors\r\n}\r\n\r\nexport default loginValidation;\r\n","import \"./UserLogin.scss\";\r\nimport useStore from \"../../store/store\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n// import { Button, Form } from \"semantic-ui-react\";\r\nimport { Button, ButtonGroup, Form } from \"react-bootstrap\";\r\nimport { loginUser } from \"../../services/backendRequests\";\r\nimport useForm from \"../../customHooks/useForm\";\r\nimport loginValidation from \"../../validationInfo/loginValidation\";\r\n\r\nfunction UserLogin(props) {\r\n  let setUser = useStore((state) => state.setUser);\r\n  const [formSuccess, setFormSuccess] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    username: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  let history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (formSuccess) {\r\n      history.push(\"/home\");\r\n    }\r\n  }, [formSuccess]);\r\n\r\n  function handleChange(event) {\r\n    setFormData((state) => ({\r\n      ...state,\r\n      [event.target.name]: event.target.value,\r\n    }));\r\n  }\r\n\r\n  function handleLogin(event) {\r\n    props.setLoginInProgress(true);\r\n\r\n    loginUser(formData).then((data) => {\r\n      if (data.statusCode === 200) {\r\n        setUser(data.userInfo.username, data.moodifyToken);\r\n        props.setLoginInProgress(false);\r\n        setFormSuccess(true);\r\n      }\r\n\r\n      if (data.statusCode === 404) {\r\n        let newErrors = { ...errors, username: data.message };\r\n        props.setLoginInProgress(false);\r\n        setErrors(newErrors);\r\n      }\r\n\r\n      if (data.statusCode === 400) {\r\n        let newErrors = { ...errors, password: data.message };\r\n        setErrors(newErrors);\r\n        props.setLoginInProgress(false);\r\n      }\r\n    });\r\n  }\r\n\r\n  const { handleValidate, errors, setErrors } = useForm(\r\n    handleLogin,\r\n    loginValidation,\r\n    formData\r\n  );\r\n\r\n  return (\r\n    <div className=\"userLoginWrapper\">\r\n      <div className=\"loginFormContainer\">\r\n        <Form onSubmit={(e) => handleValidate(e)}>\r\n          <Form.Group>\r\n            <Form.Label className=\"formLabel\">Username</Form.Label>\r\n            <Form.Control\r\n              name=\"username\"\r\n              placeholder=\"Username\"\r\n              isInvalid={errors.username}\r\n              onChange={(e) => handleChange(e)}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.username}\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label className=\"formLabel\">Password</Form.Label>\r\n            <Form.Control\r\n              name=\"password\"\r\n              placeholder=\"Password\"\r\n              type=\"password\"\r\n              isInvalid={errors.password}\r\n              onChange={(e) => handleChange(e)}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.password}\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n          <ButtonGroup>\r\n            <Button type=\"submit\">Login</Button>\r\n            <Button type=\"reset\" onClick={(e) => props.toggleFunction(e)}>\r\n              Create a New User\r\n            </Button>\r\n          </ButtonGroup>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserLogin;\r\n","import React from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nlet client_ID = \"\";\r\nlet redirect_uri = \"\";\r\n\r\nconst AUTH_URL2 = `https://accounts.spotify.com/authorize?client_id=15dca225b3034de3b3c9ded97b8ec63f&response_type=code&redirect_uri=http://localhost:3000/&scope=streaming%20user-read-email%20user-read-private%20user-library-read%20user-library-modify%20user-read-playback-state%20user-modify-playback-state`;\r\n\r\nif (window.location.host === \"localhost:3000\") {\r\n  client_ID = \"30bda40009804cc0b810a094d8653182\";\r\n  redirect_uri = \"http://localhost:3000/capstonegroup7/\";\r\n} else {\r\n  client_ID = \"7a4ffd2d4afc4f4d876826b6d369ab66\";\r\n  redirect_uri = \"https://sarahedwards715.github.io/capstonegroup7/\";\r\n}\r\n\r\nexport default function SpotifyLogin() {\r\n  return (\r\n    <Container\r\n      className=\"d-flex justify-content-center align-items-center\"\r\n      style={{ minHeight: \"100vh\" }}>\r\n      <a className=\"btn btn-success btn-lg\" href={AUTH_URL2}>\r\n        Login With Spotify\r\n      </a>\r\n    </Container>\r\n  );\r\n}\r\n","//////Two Imports Below Will Be Needed For Auth Pop Out Window////////////\r\n// import { Button, Form } from \"semantic-ui-react\";\r\n// import { launchLoginSpot, setAccessToken } from \"../services/authSpot\";\r\n/////////////////////////////////////////////////////////////////////////\r\nimport React, { useState, useEffect } from \"react\";\r\nimport useStore from \"../store/store\";\r\nimport UserRegistration from \"../components/userRegistration/UserRegistration\";\r\nimport UserLogin from \"../components/userLogin/UserLogin\";\r\nimport \"./views.scss\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { Loader } from \"semantic-ui-react\";\r\nimport SpotifyLogin from \"../components/spotifyLogin/SpotifyLogin\";\r\n\r\nfunction Landing(props) {\r\n  const accessToken = useStore((state) => state.accessToken);\r\n  const setAccessToken = useStore((state) => state.setAccessToken);\r\n  const setExpiresIn = useStore((state) => state.setExpiresIn);\r\n  const authURL = useStore((state) => state.authURL);\r\n\r\n  const [registerUserVisible, setRegisterUserVisible] = useState(false);\r\n  const [loginInProgress, setLoginInProgress] = useState(false);\r\n  const [registerInProgress, setRegisterInProgress] = useState(false);\r\n\r\n  // CITATION: Credit to Joe Karlsson -\r\n  // https://levelup.gitconnected.com/how-to-build-a-spotify-player-with-react-in-15-minutes-7e01991bc4b6\r\n  // This code basically takes the hash and splits it up into an object\r\n  useEffect(() => {\r\n    if (window.location.hash) {\r\n      const hash = window.location.hash\r\n        .substring(1)\r\n        .split(\"&\")\r\n        .reduce((initial, item) => {\r\n          if (item) {\r\n            let parts = item.split(\"=\");\r\n            initial[parts[0]] = decodeURIComponent(parts[1]);\r\n          }\r\n          return initial;\r\n        }, {});\r\n\r\n      let authToken = hash.access_token;\r\n      if (authToken) {\r\n        setAccessToken(authToken);\r\n      }\r\n\r\n      let expires_in = hash.expires_in;\r\n      if (expires_in) {\r\n        setExpiresIn(expires_in);\r\n      }\r\n\r\n      window.location.hash = \"\";\r\n    }\r\n  }, []);\r\n\r\n  function handleClick() {\r\n    setRegisterUserVisible(!registerUserVisible);\r\n  }\r\n\r\n  return (\r\n    <div className=\"landingWrapper\">\r\n      {/* This was for launching separate window, may come back to later*/}\r\n      {/* <Button onClick={() => launchLoginSpot(props)}>Click Me!</Button> */}\r\n\r\n      {registerUserVisible ? (\r\n        <div className=\"landingTitleContainer\">\r\n          <span className=\"landingTitleText\">new user</span>\r\n        </div>\r\n      ) : (\r\n        <div className=\"landingTitleContainer\">\r\n          <span className=\"landingTitleText\">moodify</span>\r\n        </div>\r\n      )}\r\n      <div className=\"landingFormWrapper\">\r\n        {(loginInProgress || registerInProgress) && (\r\n          <div className=\"loginLoaderWrapper\">\r\n            <div className=\"loaderDefiner\">\r\n              <Loader active size=\"big\">\r\n                Communicating With Server . . .\r\n              </Loader>\r\n            </div>\r\n          </div>\r\n        )}\r\n        {accessToken ? (\r\n          <>\r\n            {registerUserVisible ? (\r\n              <UserRegistration\r\n                toggleFunction={handleClick}\r\n                setRegisterInProgress={setRegisterInProgress}\r\n              />\r\n            ) : (\r\n              <UserLogin\r\n                toggleFunction={handleClick}\r\n                setLoginInProgress={setLoginInProgress}\r\n              />\r\n            )}\r\n          </>\r\n        ) : (\r\n          <div className=\"spotAuthWrapper\">\r\n            <a className=\"authBtn\" href={authURL}>\r\n              Authorize With Spotify\r\n            </a>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Landing;\r\n","import \"./MoodCard.scss\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nfunction MoodCard(props) {\r\n  return (\r\n    <Card className=\"moodCard\">\r\n      <Card.Body>\r\n        <Link\r\n          className=\"moodTitles\"\r\n          to={`/browse/${props.mood}`}\r\n          // style={{ color: \"black\" }}\r\n          >\r\n          {props.mood}\r\n        </Link>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default MoodCard;\r\n","import \"./MoodsList.scss\";\r\nimport React from \"react\";\r\nimport useStore from \"../../store/store\";\r\nimport MoodCard from \"../moodCard/MoodCard\";\r\nimport { Card } from \"semantic-ui-react\";\r\n\r\nfunction MoodsList(props) {\r\n  let moodsArray = useStore(state => state.moodsArray);\r\n  return (\r\n    <div className=\"moodsListWrapper\">\r\n      <div className=\"moodsListBanner\">moods</div>\r\n      <div className=\"moodsContainer\">\r\n        <Card.Group textAlign=\"center\" className=\"moodlistsContainer\">\r\n          {moodsArray.map((mood, index) => {\r\n            return <MoodCard mood={mood} key={index} />;\r\n          })}\r\n        </Card.Group>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MoodsList;\r\n","import \"./DeletionModal.scss\";\r\nimport React from \"react\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport { Modal } from \"react-bootstrap\";\r\n\r\nfunction DeletionModal(props) {\r\n  return (\r\n    <div className=\"deletionModalWrapper\">\r\n      <Modal\r\n        className=\"deletionModal\"\r\n        centered\r\n        onExited={() => props.setVisible(false)}\r\n        onShow={() => props.setVisible(true)}\r\n        show={props.visible}\r\n      >\r\n        {/* <Modal.Content> */}\r\n        <Modal.Body>\r\n          <p>Are you sure you wish to delete this {props.deleteTarget}?</p>\r\n        </Modal.Body>\r\n        {/* </Modal.Content> */}\r\n        <Modal.Footer>\r\n          <Button compact onClick={() => props.setVisible(false)}>\r\n            On Second Thought...\r\n          </Button>\r\n          <Button\r\n            compact\r\n            negative\r\n            onClick={() => {\r\n              props.setVisible(false);\r\n              props.deleteFunction();\r\n            }}\r\n          >\r\n            Yes, I'm Sure.\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DeletionModal;\r\n","import \"./PlaylistsCard.scss\";\r\nimport React, { useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport useStore from \"../../store/store\";\r\nimport { deletePlaylists } from \"../../services/backendRequests\";\r\nimport DeletionModal from \"../deletionModal/DeletionModal\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nfunction PlaylistsCard(props) {\r\n  const user = useStore((state) => state.user);\r\n  let setPlaylists = useStore((state) => state.setPlaylists);\r\n  let setCreatedPlaylistEditData = useStore(\r\n    (state) => state.setCreatedPlaylistEditData\r\n  );\r\n  let setCreatedPlaylistEditMode = useStore(\r\n    (state) => state.setCreatedPlaylistEditMode\r\n  );\r\n\r\n  let history = useHistory();\r\n\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n\r\n  function handleDelete(e) {\r\n    deletePlaylists(props.playlist._id, user.moodifyToken).then((data) => {\r\n      if (data.statusCode === 200) {\r\n        setPlaylists();\r\n        history.push(\"/home\");\r\n      }\r\n    });\r\n  }\r\n\r\n  function startEditMode(e) {\r\n    setCreatedPlaylistEditMode(props.playlist._id);\r\n    setCreatedPlaylistEditData(props.playlist);\r\n  }\r\n\r\n  let totalLikes = props.playlist.reviews.reduce(\r\n    (total, currentValue, index, reviews) => {\r\n      if (reviews[index].thumbsUp === true) total += 1;\r\n      return total;\r\n    },\r\n    0\r\n  );\r\n\r\n  return (\r\n    <Card className=\"playlistsCard\">\r\n      <Card.Body>\r\n        <Card.Title>\r\n          <Link\r\n            className=\"playlistTitles\"\r\n            to={`/playlists/${props.playlist._id}`}\r\n            style={{ color: \"black\" }}\r\n          >\r\n            {props.playlist.title}\r\n          </Link>\r\n        </Card.Title>\r\n        <Card.Text>by {props.playlist.username}</Card.Text>\r\n        <Card.Text>\r\n          <div className=\"playlistTotalLikes\">{totalLikes} likes</div>\r\n        </Card.Text>\r\n        {props.showDescription && (\r\n          <Card.Text>{props.playlist.description}</Card.Text>\r\n        )}\r\n        {user.username === props.playlist.username && (\r\n          <Card.Footer>\r\n            <Button\r\n              variant=\"success\"\r\n              className=\"editPlaylistButton\"\r\n              onClick={(e) => startEditMode()}\r\n            >\r\n              Edit\r\n            </Button>\r\n            <Button\r\n              variant=\"danger\"\r\n              className=\"deletePlaylistButton\"\r\n              onClick={(e) => setModalVisible(true)}\r\n            >\r\n              Delete\r\n            </Button>\r\n          </Card.Footer>\r\n        )}\r\n        <DeletionModal\r\n          deleteTarget=\"Playlist\"\r\n          deleteFunction={handleDelete}\r\n          setVisible={setModalVisible}\r\n          visible={modalVisible}\r\n        />\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default PlaylistsCard;\r\n","import \"./PlaylistsList.scss\";\r\nimport React from \"react\";\r\nimport useStore from \"../../store/store\";\r\nimport { Card } from \"semantic-ui-react\";\r\nimport PlaylistsCard from \"../playlistsCard/PlaylistsCard\";\r\n\r\nfunction PlaylistsList(props) {\r\n  const playlists = useStore(state => state.playlists);\r\n\r\n  return (\r\n    <div className=\"playlistsListWrapper\">\r\n      <div className=\"playlistsListBanner\">playlists</div>\r\n      <div className=\"playlistsContainer\">\r\n        <Card.Group textAlign=\"center\">\r\n          {playlists.map(playlist => {\r\n            return <PlaylistsCard playlist={playlist} key={playlist._id} />;\r\n          })}\r\n        </Card.Group>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PlaylistsList;\r\n","import useStore from \"../store/store\";\r\nimport React, { useEffect } from \"react\";\r\nimport { Loader} from \"semantic-ui-react\";\r\nimport MoodsList from \"../components/moodsList/MoodsList\";\r\nimport PlaylistsList from \"../components/playlistsList/PlaylistsList\";\r\nimport \"./views.scss\";\r\n\r\nfunction Browse(props) {\r\n  let moodsArray = useStore((state) => state.moodsArray);\r\n  let setMoodsArray = useStore((state) => state.setMoodsArray);\r\n  let playlists = useStore((state) => state.playlists);\r\n  let setPlaylists = useStore((state) => state.setPlaylists);\r\n\r\n  useEffect(() => {\r\n    setMoodsArray();\r\n    setPlaylists();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"browseWrapper\">\r\n      <div className=\"audioPlayerWrapper\">\r\n       \r\n      </div>\r\n      <div className=\"browseBodyWrapper\">\r\n        {moodsArray.length && playlists.length ? (\r\n          <>\r\n            <MoodsList />\r\n\r\n            <PlaylistsList />\r\n          </>\r\n        ) : (\r\n          <Loader active size=\"big\">\r\n            Loading...\r\n          </Loader>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n//playlists?.length\r\n\r\nexport default Browse;\r\n","import \"./SongListItem\";\r\nimport { Button, Table } from \"semantic-ui-react\";\r\nimport React from \"react\";\r\nimport useStore from \"../../store/store\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction SongListItem(props) {\r\n  // Look at All The Properties of the Song Object, May Need Others Later\r\n  let { name, album, artists, duration_ms, popularity, id } = props.song;\r\n  let user = useStore((state) => state.user);\r\n  let createdPlaylistData = useStore((state) => state.createdPlaylistData);\r\n  let setSelectedTrackToPlay = useStore(\r\n    (state) => state.setSelectedTrackToPlay\r\n  );\r\n  let addCreatedPlaylistSongs = useStore(\r\n    (state) => state.addCreatedPlaylistSongs\r\n  );\r\n  let deleteCreatedPlaylistSongs = useStore(\r\n    (state) => state.deleteCreatedPlaylistSongs\r\n  );\r\n\r\n  function handlePlaySong() {\r\n    setSelectedTrackToPlay(props.song.preview_url);\r\n  }\r\n\r\n  function millisToMinutesAndSeconds(duration_ms) {\r\n    var minutes = Math.floor(duration_ms / 60000);\r\n    var seconds = ((duration_ms % 60000) / 1000).toFixed(0);\r\n    return minutes + \":\" + (seconds < 10 ? \"0\" : \"\") + seconds;\r\n  }\r\n  let songDuration = millisToMinutesAndSeconds(duration_ms);\r\n\r\n  return (\r\n    <Table.Row>\r\n      {user.username && user.moodifyToken && (\r\n        <Table.Cell width=\"2\">\r\n          {!createdPlaylistData.songs.some((song) => song.id === id) ? (\r\n            <>\r\n              <Button\r\n                compact\r\n                size=\"mini\"\r\n                className=\"blue\"\r\n                style={{ padding: \"7%\", margin: \"1%\", width: \"80px\" }}\r\n                onClick={() => addCreatedPlaylistSongs(props.song)}\r\n              >\r\n                {!props.compact ? \"Add Song\" : \"Add\"}\r\n              </Button>\r\n            </>\r\n          ) : (\r\n            <Button\r\n              compact\r\n              size=\"mini\"\r\n              className=\"blue\"\r\n              style={{ padding: \"7%\", margin: \"1%\", width: \"80px\" }}\r\n              onClick={() => deleteCreatedPlaylistSongs(id)}\r\n            >\r\n              {!props.compact ? \"Delete from Playlist\" : \"Delete\"}\r\n            </Button>\r\n          )}\r\n\r\n          {props.song.preview_url ? (\r\n            <Button\r\n              size=\"mini\"\r\n              className=\"green\"\r\n              style={{ padding: \"7%\", margin: \"1%\", width: \"80px\" }}\r\n              onClick={handlePlaySong}\r\n            >\r\n              Preview\r\n            </Button>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </Table.Cell>\r\n      )}\r\n      <Table.Cell width=\"5\">{name}</Table.Cell>\r\n      <Table.Cell width=\" 2\">\r\n        <Link to={\"/artists/\" + artists[0].id}>{artists[0].name}</Link>\r\n      </Table.Cell>\r\n      {props.compact || (\r\n        <Table.Cell width=\"5\">\r\n          {album ? (\r\n            <Link to={\"/albums/\" + album.id}>{album.name}</Link>\r\n          ) : (\r\n            <p>{props.albumName}</p>\r\n          )}\r\n        </Table.Cell>\r\n      )}\r\n      {props.compact || <Table.Cell width=\" 1\">{songDuration}</Table.Cell>}\r\n    </Table.Row>\r\n  );\r\n}\r\n\r\nexport default SongListItem;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nconst useInfiniteScroll = (callback) => {\r\n  const [atBottom, setAtBottom] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (atBottom) {\r\n      setTimeout(() => {\r\n        if (callback) callback();\r\n        console.log(\"AT BOTTOM FROM HOOK\");\r\n        setAtBottom(false);\r\n      }, 1000);\r\n    }\r\n  }, [atBottom]);\r\n\r\n  return [atBottom, setAtBottom];\r\n};\r\n\r\nexport default useInfiniteScroll;\r\n","import \"./SongList.scss\";\r\nimport React from \"react\";\r\nimport useStore from \"../../store/store\";\r\nimport { Table } from \"semantic-ui-react\";\r\nimport SongListItem from \"../songListItem/SongListItem\";\r\nimport useInfiniteScroll from \"../../customHooks/useInfiniteScroll\";\r\n\r\nfunction SongList(props) {\r\n  let user = useStore((state) => state.user);\r\n\r\n  function handleScroll(event) {\r\n    const scrollable = event.target;\r\n\r\n    if (\r\n      scrollable.scrollHeight - scrollable.scrollTop ===\r\n      scrollable.clientHeight\r\n    ) {\r\n      setAtBottom(true);\r\n    }\r\n  }\r\n\r\n  const [atBottom, setAtBottom] = useInfiniteScroll(props.infiniteScrollCallback || null);\r\n\r\n  return (\r\n    <div onScroll={(e) => handleScroll(e)} className=\"songListWrapper\">\r\n      <Table stackable collapsing={props.collapsing} compact={props.compact} size=\"small\">\r\n        <Table.Header>\r\n          <Table.Row>\r\n            {user.username && user.moodifyToken && (\r\n              <Table.HeaderCell>Controls</Table.HeaderCell>\r\n            )}\r\n            <Table.HeaderCell>Track</Table.HeaderCell>\r\n            <Table.HeaderCell>Artist</Table.HeaderCell>\r\n            {props.compact || <Table.HeaderCell>Album</Table.HeaderCell>}\r\n            {props.compact || <Table.HeaderCell>Time</Table.HeaderCell>}\r\n          </Table.Row>\r\n        </Table.Header>\r\n        <Table.Body>\r\n          {props.songs &&\r\n            props.songs.map((song) => {\r\n              return (\r\n                <SongListItem\r\n                  song={song}\r\n                  key={song.id}\r\n                  compact={props.compact}\r\n                  collapsing={props.collapsing}\r\n                  albumName={props.albumName || \"\"}\r\n                />\r\n              );\r\n            })}\r\n        </Table.Body>\r\n      </Table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SongList;\r\n","import \"./ReviewsItems.scss\";\r\nimport React from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { Icon } from \"semantic-ui-react\";\r\n\r\nfunction ReviewsItems(props) {\r\n  console.log(props);\r\n\r\n  return (\r\n    <div className=\"reviewsItemsWrapper\">\r\n      <Card>\r\n        <Card.Title>{props.review.username}</Card.Title>\r\n        <Card.Text>\r\n          {props.review.thumbsUp && (\r\n            <span>\r\n              <Icon name=\"like\" />\r\n            </span>\r\n          )}\r\n          \r\n          {props.review.description}\r\n        </Card.Text>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ReviewsItems;\r\n","import \"./ReviewsDisplay.scss\";\r\nimport React from \"react\";\r\nimport { Card } from \"semantic-ui-react\";\r\nimport ReviewsItems from \"../reviewsItems/ReviewsItems\";\r\n\r\nfunction ReviewsDisplay(props) {\r\n  return (\r\n    <div className=\"reviewsDisplayWrapper\">\r\n      <div className=\"viewsSubBanner\">reviews</div>\r\n      <div className=\"reviewsContainer\">\r\n        <Card.Group>\r\n          {props.reviews?.map((review) => {\r\n            return <ReviewsItems review={review} key={review._id} />;\r\n          })}\r\n        </Card.Group>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ReviewsDisplay;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport useStore from \"../../store/store\";\r\nimport \"./Reviews.scss\";\r\nimport { Button, Icon, Form, TextArea } from \"semantic-ui-react\";\r\nimport { getReview, postReview } from \"../../services/backendRequests\";\r\n\r\nfunction Reviews(props) {\r\n  let user = useStore((state) => state.user);\r\n  let setPlaylists = useStore((state) => state.setPlaylists);\r\n  \r\n  const [like, setLike] = useState(false);\r\n  const [description, setDescription] = useState(\" \");\r\n  const [change, setChange] = useState(false);\r\n  const [reviews, setReviews] = useState([]);\r\n\r\n  // function handleLike() {\r\n  //   if (like === true) setLike(true);\r\n  // }\r\n\r\n  // function handleChange(event) {\r\n  //   if (change === true) setChange(false);\r\n  // }\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    postReview(\r\n      props.playlist_id,\r\n      description,\r\n      like,\r\n      user.moodifyToken,\r\n      user.username\r\n    ).then((data) => {\r\n      if (data.statusCode === 201) {\r\n        setPlaylists();\r\n        setDescription(\"\");\r\n      }\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    getReview(props.playlist_id).then((data) => {\r\n      setReviews(data);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"reviewsWrapper\">\r\n      <div className=\"viewsSubBanner\">leave a review</div>\r\n      <Form onSubmit={(e) => handleSubmit(e)}>\r\n        <Form.Field\r\n          id=\"form-textarea-control-opinion\"\r\n          control={TextArea}\r\n          label=\"Playlist Review\"\r\n          placeholder=\"Playlist Review\"\r\n          onChange={(e) => setDescription(e.target.value)}\r\n          value={description}\r\n        />\r\n        <Button\r\n          className={`icon ${like ? \"default_like\" : \"active_like\"}`}\r\n          as=\"Love\"\r\n          labelPosition=\"left\"\r\n          onClick={(e) => setLike(!like)}\r\n          type=\"submit\"\r\n          color=\"red\"\r\n        >\r\n          <Icon name=\"heart\" />I love !\r\n        </Button>\r\n        {/* <Label as=\"a\"content={reviews.length} basic color=\"red\" pointing=\"left\" /> */}\r\n\r\n        {/* content={reviews.map(l => l.thumbsUp).filter(l=>l).length} */}\r\n\r\n        {/* </Button> */}\r\n\r\n        <Button onClick=\"click\" type=\"submit\">\r\n          Send my Review\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Reviews;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Loader } from \"semantic-ui-react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport SongList from \"../components/songList/SongList\";\r\nimport { getPlaylistById } from \"../services/backendRequests\";\r\n\r\nimport useStore from \"../store/store\";\r\nimport \"./Playlist.scss\";\r\nimport \"./views.scss\";\r\nimport PlaylistsCard from \"../components/playlistsCard/PlaylistsCard\";\r\nimport ReviewsDisplay from \"../components/reviewsDisplay/ReviewsDisplay\";\r\nimport Reviews from \"../components/reviews/Reviews\";\r\n\r\nfunction Playlist(props) {\r\n  let playlists = useStore((state) => state.playlists);\r\n\r\n  const [errors, setErrors] = useState(\"\");\r\n  const [activePlaylist, setActivePlaylist] = useState({});\r\n\r\n  let history = useHistory();\r\n\r\n  function getPlaylist() {\r\n    getPlaylistById(props.match.params.playlist_id).then((data) => {\r\n      console.log(data);\r\n      if (data.statusCode === 404 || data.statusCode === 400) {\r\n        setErrors(data.message);\r\n      }\r\n\r\n      setActivePlaylist(data);\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    getPlaylist();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getPlaylist();\r\n  }, [playlists]);\r\n  console.log(activePlaylist);\r\n  return (\r\n    <div className=\"playlistPageWrapper\">\r\n      <div className=\"playlistTitleBanner\">{activePlaylist.title}</div>\r\n\r\n      <div\r\n        className=\"playlistPageBody\"\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-evenly\",\r\n          alignItems: \"center\",\r\n          marginTop: \"5%\",\r\n        }}\r\n      >\r\n        {errors ? (\r\n          <div className=\"viewsErrorWrapper\">\r\n            <div className=\"viewsErrorBanner\">\r\n              <p>ERROR</p>\r\n              <p>{errors}</p>\r\n            </div>\r\n            <Button onClick={(e) => history.push(\"/\")}>\r\n              Return to Landing\r\n            </Button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            {activePlaylist.songs ? (\r\n              <>\r\n                <div className=\"bodyLeftRow\">\r\n                  <PlaylistsCard showDescription playlist={activePlaylist} />\r\n                </div>\r\n                <div className=\"bodyRightRow\">\r\n                  <SongList\r\n                    songs={activePlaylist.songs}\r\n                    collapsing={false}\r\n                    compact={false}\r\n                  />\r\n                </div>\r\n              </>\r\n            ) : (\r\n              <Loader active size=\"big\">\r\n                Loading...\r\n              </Loader>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className=\"reviewFormWrapper\">\r\n        <Reviews playlist_id={props.match.params.playlist_id} />\r\n      </div>\r\n      <div className=\"playlistPageReviews\">\r\n        <ReviewsDisplay reviews={activePlaylist.reviews} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Playlist;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction NotFound(props) {\r\n  return (\r\n    <div className=\"notFoundWrapper\">\r\n      <div className=\"notFoundBanner\">\r\n        <p className=\"notFoundText\">404! Page Not Found</p>\r\n      </div>\r\n      <Link to=\"/\" className=\"notFoundReturn\">\r\n        Return to the Landing Page!\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NotFound;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport SongList from \"../components/songList/SongList\";\r\nimport { getRecommendations } from \"../services/spotAPIRequests\";\r\nimport useStore from \"../store/store\";\r\nimport \"./views.scss\";\r\n\r\nfunction Mood(props) {\r\n  const [songs, setSongs] = useState([]);\r\n  const [errors, setErrors] = useState(\"\");\r\n  let accessToken = useStore((state) => state.accessToken);\r\n  const selectedTrackToPlay = useStore((state) => state.selectedTrackToPlay);\r\n  let history = useHistory();\r\n\r\n  useEffect(() => {\r\n    getRecommendations(accessToken, props.match.params.mood).then((data) => {\r\n      if (data.error?.status === 400 || data.error?.status === 404) {\r\n        setErrors(data.error.message);\r\n      }\r\n\r\n      setSongs(data.tracks);\r\n    });\r\n  }, []);\r\n\r\n  function infiniteScrollRecommendation() {\r\n    return getRecommendations(accessToken, props.match.params.mood).then(\r\n      (data) => {\r\n        if (data.error?.status === 400 || data.error?.status === 404) {\r\n          setErrors(data.error.message);\r\n        }\r\n\r\n        // CITATATION: Remove Duplicates By Comparing Two Arrays\r\n        // https://stackoverflow.com/questions/14930516/compare-two-javascript-arrays-and-remove-duplicates\r\n        let newSongs = data.tracks.filter((track) => songs.some(oldTrack => oldTrack.id !== track.id));\r\n\r\n        let moreSongs = [...songs, ...newSongs];\r\n\r\n        setSongs(moreSongs);\r\n      }\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"moodPageWrapper\">\r\n   \r\n      <div className=\"moodPageHeader\">\r\n        <div className=\"moodPageBanner\">{props.match.params.mood}</div>\r\n      </div>\r\n      <div className=\"moodPageBody\">\r\n        {errors ? (\r\n          <div className=\"viewsErrorWrapper\">\r\n            <div className=\"viewsErrorBanner\">\r\n              <p>ERROR</p>\r\n              <p>{errors}</p>\r\n            </div>\r\n            <Button onClick={(e) => history.push(\"/\")}>\r\n              Return to Landing\r\n            </Button>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <div className=\"moodPageSongListWrapper\">\r\n              <SongList\r\n                songs={songs}\r\n                collapsing={false}\r\n                compact={false}\r\n                infiniteScrollCallback={infiniteScrollRecommendation}\r\n              />\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Mood;\r\n","import React, {useEffect} from \"react\";\r\nimport useStore from \"../../store/store\";\r\nimport { Card } from \"semantic-ui-react\";\r\nimport PlaylistsCard from \"../playlistsCard/PlaylistsCard\";\r\nimport \"./UserPlaylists.scss\";\r\n\r\nconst UserPlaylists = (props) => {\r\n  // const playlists = useStore((state) => state.playlists);\r\n  // const setPlaylists = useStore((state) => state.setPlaylists);\r\n  const userPlaylists = useStore((state) => state.userPlaylists);\r\n  const moodifyUserInfo = useStore((state) => state.moodifyUserInfo);\r\n\r\n  // useEffect(() => {\r\n  //   setPlaylists()\r\n  // }, [playlists]);\r\n\r\n  console.log(userPlaylists);\r\n  return (\r\n    <div className=\"userPlaylistsContainer\">\r\n      <Card.Group textAlign=\"center\">\r\n        {userPlaylists.map((playlist) => {\r\n          return (\r\n            <PlaylistsCard\r\n              showDescription\r\n              playlist={playlist}\r\n              key={playlist._id}\r\n              displayName={moodifyUserInfo.displayName}\r\n            />\r\n          );\r\n        })}\r\n      </Card.Group>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserPlaylists;\r\n","function patchUserValidation(values) {\r\n    let errors = {};\r\n  \r\n    if (values.length < 3) {\r\n      errors.displayName = \"A Display Name Must Be At Least 3 Characters!\";\r\n    }\r\n  \r\n    if (values.length > 30) {\r\n      errors.displayName = \"Display Name May Have No More Than 30 Characters!\";\r\n    }\r\n  \r\n    return errors\r\n  }\r\n  \r\n  export default patchUserValidation ","import \"./UserProfile.scss\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport UserPlaylists from \"../userPlaylists/UserPlaylists\";\r\nimport useStore from \"../../store/store\";\r\nimport {\r\n  getPlaylistByUsername,\r\n  getUserByUsername,\r\n  deleteUser,\r\n  patchUser,\r\n} from \"../../services/backendRequests\";\r\nimport DeletionModal from \"../deletionModal/DeletionModal\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { useHistory } from \"react-router\";\r\nimport useForm from \"../../customHooks/useForm\";\r\nimport patchUserValidation from \"../../validationInfo/patchUserValidation\";\r\n\r\nconst UserProfile = () => {\r\n  let user = useStore((state) => state.user);\r\n  let moodifyUserInfo = useStore((state) => state.moodifyUserInfo);\r\n  let setMoodifyUserInfo = useStore((state) => state.setMoodifyUserInfo);\r\n  let setUserPlaylists = useStore((state) => state.setUserPlaylists);\r\n  let userPlaylists = useStore((state) => state.userPlaylists);\r\n  const logout = useStore((state) => state.logout);\r\n\r\n  let history = useHistory();\r\n\r\n  const [displayName, setDisplayName] = useState(\"\");\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const [\r\n    editDisplayNameInputVisibility,\r\n    setEditDisplayNameInputVisibility,\r\n  ] = useState(false);\r\n\r\n  useEffect(async () => {\r\n    let moodifyUser = await getUserByUsername(user.username);\r\n    console.log(moodifyUser, \"inside useEffect\");\r\n    setMoodifyUserInfo(\r\n      moodifyUser[0].displayName,\r\n      moodifyUser[0].createdAt,\r\n      moodifyUser[0]._id\r\n    );\r\n  }, [displayName]);\r\n\r\n  useEffect(async () => {\r\n    let selectedUserPlaylist = await getPlaylistByUsername(user.username);\r\n    setUserPlaylists(selectedUserPlaylist);\r\n  }, []);\r\n\r\n  function handleDelete(event) {\r\n    deleteUser(moodifyUserInfo._id, user.moodifyToken).then((data) => {\r\n      if (data.statusCode === 200) {\r\n        history.push(\"/\");\r\n        logout();\r\n      }\r\n    });\r\n  }\r\n\r\n  function handleEditDisplayName() {\r\n    patchUser(moodifyUserInfo._id, displayName, user.moodifyToken).then(\r\n      (data) => {\r\n        if (data.statusCode === 200) {\r\n          console.log(data);\r\n\r\n          let updatedDisplayName = data.displayName;\r\n\r\n          console.log(updatedDisplayName);\r\n\r\n          let newMoodifyUserInfo = {\r\n            displayName: updatedDisplayName,\r\n            ...moodifyUserInfo,\r\n          };\r\n          setMoodifyUserInfo(\r\n            newMoodifyUserInfo.displayName,\r\n            newMoodifyUserInfo.createdAt,\r\n            newMoodifyUserInfo._id\r\n          );\r\n          setDisplayName(moodifyUserInfo.displayName);\r\n          setEditDisplayNameInputVisibility(!editDisplayNameInputVisibility);\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  function toggleEditDisplayName() {\r\n    setEditDisplayNameInputVisibility(\r\n      (editDisplayNameInputVisibility) => !editDisplayNameInputVisibility\r\n    );\r\n  }\r\n\r\n  const { handleValidate, errors, setErrors } = useForm(\r\n    handleEditDisplayName,\r\n    patchUserValidation,\r\n    displayName\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"userProfileWrapper\">\r\n        <div className=\"userProfileHeader\">\r\n          <div className=\"userProfileBanner\">{user.username}'s profile</div>\r\n          <Button\r\n          className=\"deleteUserButton\"\r\n          onClick={(e) => setModalVisible(true)}\r\n        >\r\n          Delete User\r\n        </Button>\r\n        </div>\r\n        <div className=\"userProfileDisplayNameColumn\">\r\n          <div className=\"displayNameBanner\">\r\n            {\" \"}\r\n            @{moodifyUserInfo.displayName}\r\n          </div>\r\n          {editDisplayNameInputVisibility ? (\r\n            <div className=\"editDisplayNameWrapper\">\r\n              <InputGroup className=\"mb-3 displayNameInputWrapper \">\r\n                <InputGroup.Prepend>\r\n                  <InputGroup.Text id=\"basic-addon1\">@</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <FormControl\r\n                  placeholder=\"Username\"\r\n                  aria-label=\"Username\"\r\n                  aria-describedby=\"basic-addon1\"\r\n                  isInvalid={errors.displayName}\r\n                  onChange={(e) => setDisplayName(e.target.value)}\r\n                />\r\n                <FormControl.Feedback type=\"invalid\">\r\n                  {errors.displayName}\r\n                </FormControl.Feedback>\r\n                <InputGroup.Append>\r\n                  <Button\r\n                    onClick={toggleEditDisplayName}\r\n                    className=\"inputGroupCloseButton\"\r\n                  >\r\n                    X\r\n                  </Button>\r\n                </InputGroup.Append>\r\n              </InputGroup>\r\n              <Button\r\n                variant=\"success\"\r\n                className=\"submitDisplayNameButton\"\r\n                onClick={(e) => handleValidate(e)}\r\n              >\r\n                Submit\r\n              </Button>\r\n            </div>\r\n          ) : (\r\n            <Button\r\n              onClick={toggleEditDisplayName}\r\n              className=\"editDisplayNameButton\"\r\n            >\r\n              Edit Display Name\r\n            </Button>\r\n          )}\r\n        </div>\r\n      \r\n\r\n        <div className=\"userPlaylistsBanner\">my playlists</div>\r\n\r\n        <UserPlaylists  userPlaylists={userPlaylists} />\r\n        <DeletionModal\r\n          deleteTarget=\"User\"\r\n          deleteFunction={handleDelete}\r\n          setVisible={setModalVisible}\r\n          visible={modalVisible}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserProfile;\r\n","import React from \"react\";\r\nimport UserProfile from \"../components/userProfile/UserProfile\";\r\nimport \"./Profile.scss\";\r\nimport useStore from \"../store/store\";\r\n\r\nconst Profile = () => {\r\n\r\n  return (\r\n    <>\r\n      <div className=\"profileWrapper\">\r\n        <UserProfile />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport useStore from \"../store/store\";\r\nimport Browse from \"./Browse\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport \"./Home.scss\";\r\n\r\nconst Home = () => {\r\n  const accessToken = useStore(state => state.accessToken);\r\n  const user = useStore(state => state.user);\r\n  const premiumLoginCode = useStore(state => state.premiumLoginCode);\r\n  let history = useHistory();\r\n\r\n  return (\r\n    <div className=\"viewContainer\">\r\n      {accessToken && user.moodifyToken ? (\r\n        <>\r\n            <Browse />\r\n        </>\r\n      ) : (\r\n        <div className=\"viewsErrorWrapper\">\r\n          <div className=\"viewsErrorBanner\">\r\n            <p>Error</p>\r\n            <p>Invalid Credentials! Try Logging In Again!</p>\r\n          </div>\r\n          <Button onClick={e => history.push(\"/\")}>Return to Landing</Button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import \"./Navigation.scss\";\r\nimport React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport useStore from \"../../store/store\";\r\nimport { Menu } from \"semantic-ui-react\";\r\n\r\nfunction Navigation(props) {\r\n  const accessToken = useStore((state) => state.accessToken);\r\n  const user = useStore((state) => state.user);\r\n  const logout = useStore((state) => state.logout);\r\n  const [activeItem, setActiveItem] = useState(\"landing\");\r\n  const setSelectedTrackToPlay = useStore(\r\n    (state) => state.setSelectedTrackToPlay\r\n  );\r\n\r\n  const logoutOnClick = (e) => {\r\n    setSelectedTrackToPlay([]);\r\n    logout();\r\n  };\r\n\r\n  const handleClick = (e, name) => {\r\n    setActiveItem(name);\r\n  };\r\n\r\n  return (\r\n    <div className=\"navigationWrapper\">\r\n      <Menu pointing secondary className=\"navigationMenu\">\r\n        <Menu.Item name=\"landing\" active={activeItem === \"landing\"}>\r\n          <Link to=\"/\" onClick={(e) => handleClick(e, \"landing\")}>\r\n            Landing\r\n          </Link>\r\n        </Menu.Item>\r\n        {accessToken && user.moodifyToken && (\r\n          <Menu.Item name=\"home\" active={activeItem === \"home\"}>\r\n            <Link to=\"/home\" onClick={(e) => handleClick(e, \"home\")}>\r\n              Home\r\n            </Link>\r\n          </Menu.Item>\r\n        )}\r\n        {(accessToken && user.moodifyToken) && (\r\n          <Menu.Item name=\"userProfile\" active={activeItem === \"userProfile\"}>\r\n            <Link\r\n              to=\"/userProfile\"\r\n              onClick={(e) => handleClick(e, \"userProfile\")}\r\n            >\r\n              User Profile\r\n            </Link>\r\n          </Menu.Item>\r\n        )}\r\n        {(accessToken && user.moodifyToken) && (\r\n          <Menu.Item name=\"logout\" active={activeItem === \"logout\"}>\r\n            <Link to=\"/\" onClick={(event) => logoutOnClick(event)}>\r\n              Logout\r\n            </Link>\r\n          </Menu.Item>\r\n        )}\r\n      </Menu>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navigation;\r\n","export default __webpack_public_path__ + \"static/media/albumPlaceholder.6309a46c.jpg\";","import \"./AlbumCard.scss\";\r\nimport placeholder from \"../../assets/images/albumPlaceholder.jpg\"\r\nimport React from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction AlbumCard(props) {\r\n  return (\r\n    <div className=\"albumCardsWrapper\">\r\n      <Card className=\"albumCard\">\r\n        <Card.Img variant=\"top\" src={props.album.images[1]?.url || placeholder} />\r\n        <Card.Text>\r\n          <Link to={\"/albums/\" + props.album.id}>{props.album.name}</Link>\r\n        </Card.Text>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AlbumCard;\r\n","import \"./AlbumList.scss\";\r\nimport React from \"react\";\r\nimport AlbumCard from \"../albumCard/AlbumCard\";\r\nimport useInfiniteScroll from \"../../customHooks/useInfiniteScroll\";\r\n\r\nfunction AlbumsList(props) {\r\n  function handleScroll(event) {\r\n    const scrollable = event.target;\r\n\r\n    if (\r\n      scrollable.scrollWidth - scrollable.scrollLeft ===\r\n      scrollable.clientWidth\r\n    ) {\r\n      setAtBottom(true);\r\n    }\r\n  }\r\n\r\n  const [atBottom, setAtBottom] = useInfiniteScroll(\r\n    props.infiniteScrollCallback\r\n  );\r\n\r\n  return (\r\n    <div className=\"albumsListWrapper\">\r\n      <div\r\n        onScroll={(e) => handleScroll(e)}\r\n        className=\"albumsListCardContainer\"\r\n      >\r\n        {props.albums.map((album) => {\r\n          return <AlbumCard album={album} key={album.id} />;\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AlbumsList;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport placeholder from \"./../assets/images/albumPlaceholder.jpg\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Loader, Placeholder } from \"semantic-ui-react\";\r\nimport AlbumsList from \"../components/albumsList/AlbumsList\";\r\nimport SongList from \"../components/songList/SongList\";\r\nimport {\r\n  getAlbum,\r\n  getAlbumTracks,\r\n  getArtistAlbums,\r\n} from \"../services/spotAPIRequests\";\r\nimport useStore from \"../store/store\";\r\nimport \"./views.scss\";\r\n\r\nfunction Album(props) {\r\n  const [albumInfo, setAlbumInfo] = useState({\r\n    name: \"\",\r\n    artist: {},\r\n    image: null,\r\n    genres: [],\r\n  });\r\n  const [albumTracks, setAlbumTracks] = useState([]);\r\n  const [artistAlbums, setArtistAlbums] = useState([]);\r\n  const [artistTotalAlbums, setArtistTotalAlbums] = useState(0);\r\n  const [artistAlbumsOffset, setArtistAlbumsOffset] = useState(0);\r\n\r\n  const album_id = props.match.params.album_id;\r\n  const accessToken = useStore((state) => state.accessToken);\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n    getAlbum(accessToken, album_id).then((data) => {\r\n      console.log(data);\r\n      setAlbumInfo({\r\n        name: data.name,\r\n        artist: data.artists[0],\r\n        image: data.images[0]?.url || placeholder,\r\n        genres: data.genres,\r\n      });\r\n    });\r\n    getAlbumTracks(accessToken, album_id).then((data) => {\r\n      console.log(\"TRACKS\", data);\r\n      setAlbumTracks(data.items);\r\n    });\r\n  }, [props]);\r\n\r\n  useEffect(() => {\r\n    if (albumInfo.artist?.id) {\r\n      getArtistAlbums(accessToken, albumInfo.artist.id).then((data) => {\r\n        setArtistAlbums(data.items);\r\n        setArtistTotalAlbums(data.total);\r\n      });\r\n    }\r\n  }, [albumInfo]);\r\n\r\n  function infiniteScrollAlbums() {\r\n    if (artistAlbums.length < artistTotalAlbums) {\r\n      return getArtistAlbums(\r\n        accessToken,\r\n        albumInfo.artist.id,\r\n        10,\r\n        artistAlbumsOffset\r\n      )\r\n        .then((data) => {\r\n          let newAlbums = data.items.filter((album) =>\r\n            artistAlbums.some((oldAlbum) => oldAlbum.id !== album.id)\r\n          );\r\n\r\n          let moreAlbums = [...artistAlbums, ...newAlbums];\r\n\r\n          console.log(newAlbums);\r\n\r\n          setArtistAlbums(moreAlbums);\r\n        })\r\n        .then(\r\n          setArtistAlbumsOffset(\r\n            (artistAlbumsOffset) => (artistAlbumsOffset += 10)\r\n          )\r\n        );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"albumPageWrapper\">\r\n      <div className=\"albumPageHeader\">\r\n        <div className=\"albumPageBanner\">{albumInfo.name}</div>\r\n        <div className=\"viewsSubBanner\">\r\n          <Link to={\"/artists/\" + albumInfo.artist.id}>\r\n            {albumInfo.artist.name}\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <div className=\"albumPageBody\">\r\n        <div className=\"bodyLeftRow\">\r\n          {albumInfo.image ? (\r\n            <div className=\"albumPageMainArt\">\r\n              <img\r\n                className=\"albumPageMainArt\"\r\n                src={albumInfo.image}\r\n                alt=\"cover_art\"\r\n              />\r\n            </div>\r\n          ) : (\r\n            <Placeholder.Image />\r\n          )}\r\n        </div>\r\n        <div className=\"bodyRightRow\">\r\n          {albumTracks.length ? (\r\n            <SongList songs={albumTracks} albumName={albumInfo.name} />\r\n          ) : (\r\n            <Loader active size=\"big\">\r\n              Loading . . .\r\n            </Loader>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"albumPageAlbumsColumn\">\r\n        <div className=\"viewsSubBanner\">Albums By {albumInfo.artist.name} </div>\r\n        <AlbumsList\r\n          albums={artistAlbums}\r\n          infiniteScrollCallback={infiniteScrollAlbums}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Album;\r\n","export default __webpack_public_path__ + \"static/media/artistPlaceholder.e61e3e30.png\";","import \"./ArtistsCard.scss\";\r\nimport placeholder from \"../../assets/images/artistPlaceholder.png\"\r\nimport React from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction ArtistsCard(props) {\r\n  // const image\r\n\r\n  return (\r\n    <div className=\"artistsCardWrapper\">\r\n      <Card className=\"artistCard\">\r\n        <Card.Header>\r\n          <Link to={\"/artists/\" + props.artist.id}>{props.artist.name}</Link>\r\n        </Card.Header>\r\n        <Card.Img variant=\"bottom\" src={props.artist.images[0]?.url || placeholder} />\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ArtistsCard;\r\n","import \"./ArtistsList.scss\";\r\nimport React from \"react\";\r\nimport ArtistsCard from \"../artistsCard/ArtistsCard\";\r\n\r\nfunction ArtistsList(props) {\r\n  return (\r\n    <div className=\"artistsListWrapper\">\r\n      <div className=\"artistsListCardContainer\">\r\n        {props.artists.map((artist) => {\r\n          return <ArtistsCard artist={artist} key={artist.id} />;\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ArtistsList;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Loader, Placeholder } from \"semantic-ui-react\";\r\nimport AlbumsList from \"../components/albumsList/AlbumsList\";\r\nimport ArtistsList from \"../components/artistsList/ArtistsList\";\r\nimport SongList from \"../components/songList/SongList\";\r\nimport {\r\n  getArtist,\r\n  getArtistAlbums,\r\n  getArtistTracks,\r\n  getRelatedArtists,\r\n} from \"../services/spotAPIRequests\";\r\nimport useStore from \"../store/store\";\r\nimport \"./views.scss\";\r\n\r\nfunction Artist(props) {\r\n  const accessToken = useStore((state) => state.accessToken);\r\n  const artist_id = props.match.params.artist_id;\r\n  const [artistInfo, setArtistInfo] = useState({\r\n    genres: [],\r\n    name: \"\",\r\n    image: {},\r\n    followers: {},\r\n  });\r\n  const [artistAlbums, setArtistAlbums] = useState([]);\r\n  const [artistTracks, setArtistTracks] = useState([]);\r\n  const [artistRelatedArtists, setArtistRelatedArtists] = useState([]);\r\n  const [artistTotalAlbums, setArtistTotalAlbums] = useState(0);\r\n  const [artistAlbumsOffset, setArtistAlbumsOffset] = useState(0);\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n    getArtist(accessToken, artist_id).then((data) => {\r\n      setArtistInfo({\r\n        genres: data.genres,\r\n        name: data.name,\r\n        image: data.images[1].url,\r\n        followers: data.followers,\r\n      });\r\n    });\r\n    getArtistAlbums(accessToken, artist_id).then((data) => {\r\n      setArtistAlbums(data.items);\r\n      setArtistTotalAlbums(data.total);\r\n    });\r\n    getArtistTracks(accessToken, artist_id).then((data) => {\r\n      setArtistTracks(data.tracks);\r\n    });\r\n    getRelatedArtists(accessToken, artist_id).then((data) => {\r\n      setArtistRelatedArtists(data.artists);\r\n    });\r\n  }, [props]);\r\n\r\n  function infiniteScrollAlbums() {\r\n    if (artistAlbums.length < artistTotalAlbums) {\r\n      return getArtistAlbums(accessToken, artist_id, 10, artistAlbumsOffset)\r\n        .then((data) => {\r\n          let newAlbums = data.items.filter((album) =>\r\n            artistAlbums.some((oldAlbum) => oldAlbum.id !== album.id)\r\n          );\r\n\r\n          let moreAlbums = [...artistAlbums, ...newAlbums];\r\n\r\n          console.log(newAlbums);\r\n\r\n          setArtistAlbums(moreAlbums);\r\n        })\r\n        .then(\r\n          setArtistAlbumsOffset(\r\n            (artistAlbumsOffset) => (artistAlbumsOffset += 10)\r\n          )\r\n        );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"artistPageWrapper\">\r\n      <div className=\"artistPageHeader\">\r\n        <div className=\"headerLeftRow\">\r\n          {artistInfo.image ? (\r\n            <div\r\n              className=\"artistPageMainArt\"\r\n              style={{\r\n                backgroundImage: `url(${artistInfo.image})`,\r\n                backgroundSize: \"cover\",\r\n              }}\r\n            ></div>\r\n          ) : (\r\n            <Placeholder.Image />\r\n          )}\r\n          <div className=\"artistPageBanner\">{artistInfo.name}</div>\r\n        </div>\r\n        <div className=\"headerRightRow\">\r\n          <div className=\"viewsSubBanner\">top tracks</div>\r\n\r\n          {artistTracks.length ? (\r\n            <div className=\"artistSongListWrapper\">\r\n              <SongList songs={artistTracks} />\r\n            </div>\r\n          ) : (\r\n            <Loader active size=\"big\">\r\n              Loading . . .\r\n            </Loader>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"artistPageBody\">\r\n        <div className=\"artistPageAlbumsColumn\">\r\n          <div className=\"viewsSubBanner\">\r\n            appears on {artistTotalAlbums} albums\r\n          </div>\r\n          <AlbumsList\r\n            albums={artistAlbums}\r\n            infiniteScrollCallback={infiniteScrollAlbums}\r\n          />\r\n        </div>\r\n        <div className=\"artistPageArtistsColumn\">\r\n          <div className=\"viewsSubBanner\">related artists</div>\r\n          <ArtistsList artists={artistRelatedArtists} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Artist;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport AlbumsList from \"../components/albumsList/AlbumsList\";\r\nimport ArtistsList from \"../components/artistsList/ArtistsList\";\r\nimport SongList from \"../components/songList/SongList\";\r\nimport { searchQuery } from \"../services/spotAPIRequests\";\r\nimport useStore from \"../store/store\";\r\n\r\nfunction Search(props) {\r\n  const accessToken = useStore((state) => state.accessToken);\r\n  const selectedTrackToPlay = useStore((state) => state.selectedTrackToPlay);\r\n  const query = props.match.params.query;\r\n  const [searchedTracks, setSearchedTracks] = useState([]);\r\n  const [searchedArtists, setSearchedArtists] = useState([]);\r\n  const [searchedAlbums, setSearchedAlbums] = useState([]);\r\n\r\n  useEffect(() => {\r\n    searchQuery(accessToken, query, \"track\").then((data) => {\r\n      console.log(\"SEARCH TRACKS\", data);\r\n      setSearchedTracks(data.tracks.items);\r\n    });\r\n    searchQuery(accessToken, query, \"artist\").then((data) => {\r\n      console.log(\"SEARCH ARTISTS\", data);\r\n      setSearchedArtists(data.artists.items);\r\n    });\r\n    searchQuery(accessToken, query, \"album\").then((data) => {\r\n      console.log(\"SEARCH ALBUMS\", data);\r\n      setSearchedAlbums(data.albums.items);\r\n    });\r\n  }, [props]);\r\n\r\n  return (\r\n    <div className=\"searchPageWrapper\">\r\n      <div className=\"searchPageHeader\">\r\n        <div className=\"viewsSubBanner\">\r\n          Showing Results For {decodeURIComponent(query)}\r\n        </div>\r\n      </div>\r\n      <div className=\"searchPageBody\">\r\n        <div className=\"searchPageArtistsColumn\">\r\n          <div className=\"viewsSubBanner\">artists</div>\r\n          <ArtistsList artists={searchedArtists} />\r\n        </div>\r\n        <div className=\"searchPageTracksColumn\">\r\n          <div className=\"viewsSubBanner\">tracks</div>\r\n          <SongList songs={searchedTracks} />\r\n        </div>\r\n        <div className=\"searchPageAlbumsColumn\">\r\n          <div className=\"viewsSubBanner\">albums</div>\r\n          <AlbumsList albums={searchedAlbums} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","import \"./SearchBar.scss\";\r\nimport React, { useState } from \"react\";\r\nimport { Button, Form, InputGroup } from \"react-bootstrap\";\r\nimport { Icon } from \"semantic-ui-react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction SearchBar() {\r\n  const [query, setQuery] = useState(\"\");\r\n\r\n  let history = useHistory();\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    history.push(\"/search/\" + encodeURIComponent(query));\r\n  }\r\n\r\n  return (\r\n    <div className=\"searchBarWrapper\">\r\n      <Form onSubmit={(e) => handleSubmit(e)}>\r\n        <Form.Group>\r\n          <InputGroup hasValidation>\r\n            <InputGroup.Prepend>\r\n              <Icon name=\"search\" />\r\n            </InputGroup.Prepend>\r\n            <Form.Control\r\n              name=\"query\"\r\n              placeholder=\"Search . . .\"\r\n              onChange={(e) => setQuery(e.target.value)}\r\n              value={query}\r\n            />\r\n            <InputGroup.Append>\r\n              <Button type=\"submit\">Search</Button>\r\n            </InputGroup.Append>\r\n          </InputGroup>\r\n        </Form.Group>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchBar;\r\n","function playlistValidation(values) {\r\n  let errors = {};\r\n\r\n  if (!values.title.trim()) {\r\n    errors.title = \"A Playlist Must Have A Title!\";\r\n  } else if (values.title.length < 3) {\r\n    errors.title = \"A Title Must Have A Least 3 Characters!\";\r\n  }\r\n\r\n  if (values.title.length > 50) {\r\n    errors.title = \"A Title May Not Be Longer Than 50 Characters!\";\r\n  }\r\n\r\n  if (values.description.length && values.description.length < 3) {\r\n    errors.description =\r\n      \"A Playlist's Description is Optional, but Must Have At Least 3 Characters!\";\r\n  }\r\n\r\n  if (values.description.length > 80) {\r\n    errors.description = \"A Description May Not Be Longer Than 80 Characters!\";\r\n  }\r\n\r\n  return errors\r\n}\r\n\r\nexport default playlistValidation;\r\n","import \"./PlaylistsCreation.scss\";\r\nimport React, { useState } from \"react\";\r\nimport useStore from \"../../store/store\";\r\nimport SongList from \"../songList/SongList\";\r\nimport { Button, Message } from \"semantic-ui-react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { postPlaylists, patchPlaylists } from \"../../services/backendRequests\";\r\nimport useForm from \"../../customHooks/useForm\";\r\nimport playlistValidation from \"../../validationInfo/playlistValidation\";\r\n\r\nfunction PlaylistsCreation() {\r\n  let user = useStore((state) => state.user);\r\n  let createdPlaylistData = useStore((state) => state.createdPlaylistData);\r\n  let createdPlaylistEditMode = useStore(\r\n    (state) => state.createdPlaylistEditMode\r\n  );\r\n  let setCreatedPlaylistData = useStore(\r\n    (state) => state.setCreatedPlaylistData\r\n  );\r\n  let clearCreatedPlaylistData = useStore(\r\n    (state) => state.clearCreatedPlaylistData\r\n  );\r\n  let setCreatedPlaylistEditMode = useStore(\r\n    (state) => state.setCreatedPlaylistEditMode\r\n  );\r\n  let setPlaylists = useStore((state) => state.setPlaylists);\r\n\r\n  const [formSuccess, setFormSuccess] = useState(false);\r\n\r\n  function handleChange(event) {\r\n    setCreatedPlaylistData({\r\n      ...createdPlaylistData,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  }\r\n\r\n  function handleClose(e) {\r\n    clearCreatedPlaylistData();\r\n    if (createdPlaylistEditMode.active) setCreatedPlaylistEditMode();\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    // e.preventDefault();\r\n    createdPlaylistEditMode.active\r\n      ? patchPlaylists(\r\n          createdPlaylistEditMode.playlist_id,\r\n          createdPlaylistData,\r\n          user.username,\r\n          user.moodifyToken\r\n        ).then((data) => {\r\n          if (data.statusCode === 200) {\r\n            setFormSuccess(true);\r\n            setPlaylists();\r\n            clearCreatedPlaylistData();\r\n            setCreatedPlaylistEditMode();\r\n            setInterval(setFormSuccess(false), 5000);\r\n          }\r\n        })\r\n      : postPlaylists(\r\n          createdPlaylistData,\r\n          user.username,\r\n          user.moodifyToken\r\n        ).then((data) => {\r\n          if (data.statusCode === 201) {\r\n            setFormSuccess(true);\r\n            setPlaylists();\r\n            clearCreatedPlaylistData();\r\n            setInterval(setFormSuccess(false), 5000);\r\n          }\r\n        });\r\n  }\r\n\r\n  const { handleValidate, errors, setErrors } = useForm(\r\n    handleSubmit,\r\n    playlistValidation,\r\n    createdPlaylistData\r\n  );\r\n\r\n  //This is some logic to determine the component's header,\r\n  //I wanted to separate it from main JSX\r\n  let playlistCreationHeader;\r\n  if (formSuccess) playlistCreationHeader = \"Success!\";\r\n  else if (createdPlaylistEditMode.active) playlistCreationHeader = \"Editing!\";\r\n  else if (!createdPlaylistEditMode.active && createdPlaylistData.songs.length)\r\n    playlistCreationHeader = \"Creating!\";\r\n  else playlistCreationHeader = \"Standby!\";\r\n\r\n  return (\r\n    <div className=\"playlistCreationWrapper\">\r\n      {/* <Segment> */}\r\n      {user.moodifyToken && (\r\n        <div className=\"playlistCreationHeader\">{playlistCreationHeader}</div>\r\n      )}\r\n      {createdPlaylistData.songs.length !== 0 && user.moodifyToken && (\r\n        <>\r\n          <SongList\r\n            songs={createdPlaylistData.songs}\r\n            collapsing={true}\r\n            compact={true}\r\n          />\r\n          <Form onSubmit={(e) => handleValidate(e)}>\r\n            <Form.Group>\r\n              <Form.Label className=\"formLabel\">Playlist Title</Form.Label>\r\n              <Form.Control\r\n                name=\"title\"\r\n                placeholder=\"Title\"\r\n                isInvalid={errors.title}\r\n                onChange={(e) => handleChange(e)}\r\n                value={createdPlaylistData.title}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {errors.title}\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label className=\"formLabel\">\r\n                Playlist Description\r\n              </Form.Label>\r\n              <Form.Control\r\n                // as=\"textarea\"\r\n                // rows={3}\r\n                name=\"description\"\r\n                placeholder=\"Description\"\r\n                isInvalid={errors.description}\r\n                onChange={(e) => handleChange(e)}\r\n                value={createdPlaylistData.description}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {errors.description}\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n            <Button.Group>\r\n              <Button type=\"submit\">\r\n                {createdPlaylistEditMode.active\r\n                  ? \"Update Playlist\"\r\n                  : \"Upload Playlist\"}\r\n              </Button>\r\n              <Button.Or />\r\n              <Button type=\"reset\" onClick={(e) => handleClose()}>\r\n                Close\r\n              </Button>\r\n            </Button.Group>\r\n          </Form>\r\n          {createdPlaylistEditMode.active && (\r\n            <Message warning>You Are In Edit Mode!</Message>\r\n          )}\r\n        </>\r\n      )}\r\n      {/* </Segment> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PlaylistsCreation;\r\n","import React from \"react\";\r\nimport \"./AccessCountdown.scss\";\r\nimport useStore from \"../../store/store\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nfunction AccessCountdown() {\r\n  let accessExpiresIn = useStore((state) => state.accessExpiresIn);\r\n  let logout = useStore((state) => state.logout);\r\n\r\n  const [countdown, setcountdown] = useState(accessExpiresIn);\r\n  const [timerRunning, setTimerRunning] = useState(false);\r\n\r\n  let history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (timerRunning) {\r\n      window.timer = setInterval(() => {\r\n        setcountdown((countdown) => countdown - 1);\r\n      }, 1000);\r\n    }\r\n\r\n    return () => clearInterval(window.timer);\r\n  }, [timerRunning]);\r\n\r\n  useEffect(() => {\r\n    if (countdown < 0) {\r\n      logout();\r\n      history.push(\"/\");\r\n    }\r\n  }, [countdown]);\r\n\r\n  useEffect(() => {\r\n    setTimerRunning(true);\r\n  }, []);\r\n\r\n  return <div className=\"Accesscountdownwrapper\">{countdown}</div>;\r\n}\r\n\r\nexport default AccessCountdown;\r\n","import logo from \"./logo.svg\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport \"./App.scss\";\r\nimport useStore from \"./store/store\";\r\nimport Landing from \"./views/Landing\";\r\nimport Browse from \"./views/Browse\";\r\nimport Playlist from \"./views/Playlist\";\r\nimport NotFound from \"./views/NotFound\";\r\nimport Mood from \"./views/Mood\";\r\nimport Profile from \"./views/Profile\";\r\nimport Home from \"./views/Home\";\r\nimport Navigation from \"./components/navigation/Navigation\";\r\nimport Album from \"./views/Album\";\r\nimport Artist from \"./views/Artist\";\r\nimport Search from \"./views/Search\";\r\nimport SearchBar from \"./components/searchBar/SearchBar\";\r\nimport PlaylistsCreation from \"./components/playlistsCreation/PlaylistsCreation\";\r\nimport ReactAudioPlayer from \"react-audio-player\";\r\nimport AccessCountdown from \"./components/accessCountdown/AccessCountdown\";\r\n\r\n\r\nfunction App() {\r\n  const accessToken = useStore((state) => state.accessToken);\r\n  const user = useStore((state) => state.user);\r\n  const selectedTrackToPlay = useStore((state) => state.selectedTrackToPlay);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Navigation />\r\n      <div className=\"appBody\">\r\n        {accessToken && user.moodifyToken && (\r\n          <div className=\"appLeftColumn\">\r\n            <AccessCountdown/>\r\n            <div className=\"searchBarDiv\">\r\n              <SearchBar />\r\n            </div>\r\n            <div className=\"audioPlayerWrapper\">\r\n              <ReactAudioPlayer\r\n                className=\"browsePagePlayer\"\r\n                src={selectedTrackToPlay}\r\n                controls\r\n              />\r\n            </div>\r\n            <div className=\"playlistCreationWrapper\">\r\n              <PlaylistsCreation />\r\n            </div>\r\n          </div>\r\n        )}\r\n        <div className=\"appRightColumn\">\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Landing} />\r\n            <Route exact path=\"/home\" component={Home} />\r\n            <Route exact path=\"/browse\" component={Browse} />\r\n            <Route path=\"/browse/:mood\" component={Mood} />\r\n            <Route exact path=\"/playlists/:playlist_id\" component={Playlist} />\r\n            <Route exact path=\"/albums/:album_id\" component={Album} />\r\n            <Route exact path=\"/artists/:artist_id\" component={Artist} />\r\n            <Route exact path=\"/search/:query\" component={Search} />\r\n            <Route exact path=\"/userProfile\" component={Profile} />\r\n            <Route path=\"*\" component={NotFound} />\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n      {/* <div className=\"appLeftColumn\">\r\n        {accessToken && user.moodifyToken && (\r\n          <>\r\n            <PlaylistsCreation />\r\n          </>\r\n        )}\r\n      </div>\r\n      <div className=\"playerContainer\">\r\n        {/* <SongPlayer accessToken={accessToken} /> */}\r\n\r\n      {/* {accessToken && (\r\n          <ReactAudioPlayer src={selectedTrackToPlay} autoPlay controls />\r\n        )}  */}\r\n      {/* </div> */}\r\n      <div className=\"playerContainer\"></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport \"./index.css\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter basename=\"/capstonegroup7\">\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}